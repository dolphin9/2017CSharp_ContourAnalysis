<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>