<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P8dgRouEkzHVAAAAAElFTkSuQmCC
</value>
  </data>
</root>